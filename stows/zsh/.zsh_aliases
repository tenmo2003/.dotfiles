# ls
alias l='ls -lh'
alias ll='ls -lah'
alias la='ls -A'
alias lm='ls -m'
alias lr='ls -R'
alias lg='ls -l --group-directories-first'

# git
alias gcl='git clone --depth 1'
alias gi='git init'
alias ga='git add'
alias gc='git commit -m'
alias gp='git push'
alias gs='git status'
alias gst='git stash'
alias gca='git commit --amend'
alias gcane='git commit --amend --no-edit'

alias grsh='git reset --hard'
alias grss='git reset --soft'
alias grs='git reset'

# cds
alias cd2='cd ../..'
alias cd3='cd ../../..'
alias cd4='cd ../../../../'

# custom
alias vi='nvim'
alias vim='nvim'

nvimconfig() {
    pushd "$DOTFILES/stows/nvim/.config/nvim" > /dev/null || return
    nvim .
    popd > /dev/null || return
}

zshconfig() {
    pushd "$DOTFILES"
    nvim stows/zsh/.zshrc
    popd
}

dotfilesconfig() {
    pushd "$DOTFILES"
    nvim .
    popd
}

gotolazy() {
    pushd ~/.local/share/nvim/lazy
}

newprj() {
    if [[ -z "$1" ]]; then
        echo "Usage: newprj <project-name> [project-type(personal/work)]"
        return
    fi

    project_type="personal"
    if [[ -n "$2" ]]; then
        project_type="$2"
    fi

    if [[ "$1" =~ ^https?:// ]]; then
        pushd ~/projects/"$project_type"
        git clone "$1"
        popd
    else
        mkdir -p ~/projects/"$project_type"/"$1"
    fi
}

markprj() {
    project_dir="$(pwd)"
    if [[ -n "$1" ]]; then
        project_dir="$(readlink -f "$1")"
    fi

    mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/tmux-sessionizer/"
    ADDITIONAL_PROJECTS="${XDG_CACHE_HOME:-$HOME/.cache}/tmux-sessionizer/additional-projects"

    if ! grep -qxF "$project_dir" "$ADDITIONAL_PROJECTS" 2>/dev/null; then
        echo "$project_dir" >> "$ADDITIONAL_PROJECTS"
        echo "Added $project_dir to additional projects"
    else
        echo "$project_dir is already in additional projects"
    fi
}
