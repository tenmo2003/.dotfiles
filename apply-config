#!/usr/bin/env zsh

install_stow() {
    echo "Stow is not installed. Attempting to install..."

    if command -v apt >/dev/null 2>&1; then
        sudo apt update && sudo apt install -y stow
    elif command -v brew >/dev/null 2>&1; then
        brew install stow
    elif command -v pacman >/dev/null 2>&1; then
        sudo pacman -Sy --noconfirm stow
    elif command -v dnf >/dev/null 2>&1; then
        sudo dnf install -y stow
    elif command -v yum >/dev/null 2>&1; then
        sudo yum install -y stow
    else
        echo "No supported package manager found. Please install 'stow' manually."
        return 1
    fi
}

if ! command -v stow >/dev/null 2>&1; then
    install_stow
fi

echo "Backup nvim config?(y/n)"
read -q yn
if [[ $yn == "y" ]]; then
    echo "Backing up nvim config..."
    pushd $HOME/.config/
    mv nvim nvim.bak
    popd
    echo "Backed up nvim config to $HOME/.config/nvim.bak"
fi

SCRIPT_DIR="$(cd -- "$(dirname -- "${(%):-%N}")" && pwd)"

if [[ -z $DOTFILES ]]; then
    DOTFILES=$HOME/.dotfiles
fi

pushd "$DOTFILES" || exit

echo "Initializing git submodules..."
git submodule update --init --recursive --remote --merge

echo "Checkout nvim"
pushd $SCRIPT_DIR/stows/nvim/.config/nvim
git checkout master
popd

# to avoid creating symlink directly to these directories as we only need the children
mkdir -p $HOME/.config
mkdir -p $HOME/.local

echo "Stowing..."
pushd $SCRIPT_DIR/stows
stow -v -t $HOME --adopt */
popd

git restore .

popd
